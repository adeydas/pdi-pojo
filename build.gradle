apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"

project.ext.kettle_version = '5.0+'
description = "Helpers to create PDI elements using POJOs"

// Spock works with Java 1.6 and above
sourceCompatibility = 1.6

repositories {
  
  mavenLocal()
  
  ivy {
    url "http://repo.pentaho.org/artifactory/repo/"
    layout  "pattern", {
      ivy "[organisation]/[module]/[revision]/[module]-[revision].ivy.xml"
      artifact "[organisation]/[module]/[revision]/[module]-[revision].jar"
      m2compatible = true
    }
  }
  maven {
    url 'http://repo.pentaho.org/artifactory/repo'
  }
  
  mavenCentral()
}

configurations {
  runtimeWithoutCompile {
    transitive = false
  }
  zip
}

dependencies {
  compile("pentaho-kettle:kettle-core:${project.ext.kettle_version}")
  compile("pentaho-kettle:kettle-engine:${project.ext.kettle_version}")
  compile("pentaho-kettle:kettle-dbdialog:${project.ext.kettle_version}")
  compile("pentaho-kettle:kettle-ui-swt:${project.ext.kettle_version}")
  compile("pentaho:metastore:${project.ext.kettle_version}")
}

// This task builds a PDI plugin in the correct format, a ZIP with the plugin JAR at the root and a lib/ folder containing
// all third-party dependencies
task plugin(dependsOn: [jar,compileTestJava], type: Zip) {
  into("${project.name}/") {
    from jar.outputs.files
    from fileTree(dir: 'package-res')
  }
  
  // The list of JARs in the lib/ folder is the complement of the intersection of the compile and runtime dependencies,
  // plus the JARs in the runtimeWithoutCompile config
  def compileDeps = configurations.compile.resolve()
  def runtimeDeps = configurations.runtime.resolve()
  def leftovers = (compileDeps + runtimeDeps) - compileDeps.intersect(runtimeDeps)
  into("${project.name}/lib") {
    from leftovers
    from configurations.runtimeWithoutCompile
  }
}

artifacts {
  zip plugin
}

task wrapper(type: Wrapper) {
  gradleVersion = "1.8"
}


